version: '3.6'

services:
  app:
    container_name: app
    build: ./
    image: &hyde hyde
    restart: always
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      &envfile
      - env_dev
    ports:
      - "8000:8000"
    volumes:
      - ./hyde:/usr/src/hyde
    depends_on:
      - rabbit
    networks:
      - app_network

  app_db:
    container_name: app_db
    image: postgres:latest
    env_file: *envfile
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - app_network

  rabbit:
    container_name: rabbit
    image: rabbitmq:management
    # env_file: *envfile
    env_file: *envfile
    ports:
      - "5672:5672"
      - 15672:15672
    networks:
      - app_network
    restart: on-failure

  worker:
    build: .
    image: *hyde
    restart: on-failure
    env_file: *envfile
    container_name: worker
    command: sh -c "celery -A engine.celery.app worker -l info"
    volumes:
      - ./hyde:/hyde
    depends_on:
      - app
      - rabbit
      - app_db
    networks:
      - app_network

  beat:
    build: .
    image: *hyde
    restart: on-failure
    env_file: *envfile
    container_name: beat
    command: sh -c "celery -A engine.celery.app beat -l info"
    volumes:
      - ./hyde:/hyde
    depends_on:
      - app
      - rabbit
      - app_db
      - worker
    networks:
      - app_network

  flower:
    image: mher/flower
    restart: on-failure
    env_file: *envfile
    ports:
      - "5555:5555"
    depends_on:
      - rabbit
    networks:
      - app_network

networks:
  app_network:


volumes:
  postgres_data:
