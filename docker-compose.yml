version: '3.2'

services:
  app:
    container_name: app
    build: ./
    image: &hyde hyde
    restart: on-failure
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      &envfile
      - env.env
    ports:
      - "8000:8000"
    volumes:
      - ./hyde:/hyde
    depends_on:
      - rabbit
    networks:
      - app_network

  worker:
    build: .
    image: *hyde
    restart: on-failure
    env_file: *envfile
    container_name: worker
    command: sh -c "celery -A engine.celery.app worker -l info"
    volumes:
      - ./hyde:/hyde
    depends_on:
      - app
      - rabbit
      - app_db
    networks:
      - app_network

  rabbit:
    container_name: rabbit
    image: rabbitmq:management
    # env_file: *envfile
    environment:
      - RABBITMQ_PASS=guest
    ports:
      - "5672:5672"
      - 15672:15672
    networks:
      - app_network
    restart: on-failure

  # app:
  #   container_name: app
  #   build: ./
  #   image: &hyde hyde
  #   restart: on-failure
  #   command: [ "python", "manage.py", "runserver", "0.0.0.0:8000" ]
  #   env_file:
  #     &envfile
  #     - env.env
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./hyde:/hyde
  #   depends_on:
  #     - app_rabbit_broker
  #   networks:
  #     - app_network

  # worker_engine:
  #   build: .
  #   image: *hyde
  #   restart: on-failure
  #   env_file: *envfile
  #   container_name: worker_engine
  #   command: sh -c "celery -A engine.celery.app worker -l info"
  #   volumes:
  #     - ./hyde:/hyde
  #   depends_on:
  #     - app
  #     - rabbit
  #     - app_db
  #   networks:
  #     - app_network


  # flower:
  #   image: zoomeranalytics/flower:0.9.1-4.0.2
  #   restart: on-failure
  #   env_file: *envfile
  #   ports:
  #     - "5555:5555"
  #   depends_on:
  #     - app_rabbit_broker
  #   networks:
  #     - app_network

  # app_rabbit_broker:
  #   container_name: app_rabbitmq
  #   image: rabbitmq:management
  #   env_file: *envfile
  #   ports:
  #     - "5672:5672"
  #     - 15672:15672
  #   networks:
  #     - app_network
  #   restart: on-failure

  app_db:
    container_name: app_db
    image: postgres:13.1
    environment:
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_DB=app_db
    networks:
      - app_network

networks:
  app_network:
